- hosts: droplet
  gather_facts: false
  vars:
    ansible_user: root
    ansible_ssh_private_key_file: ~/.ssh/id_rsa
    git_repo_ssh: git@github.com:emlagowski/droplet-example-project.git
    repo_dest: repos/droplet-example-project
    domain: test.letsbesanta.com
    droplet_id: all-in-one

  tasks:
    - include_vars: secrets.yaml
    
    - name: Clone repository
      git:
        repo: "{{ git_repo_ssh }}"
        dest: "{{ repo_dest }}"
        key_file: /root/.ssh/id_ed25519
        accept_hostkey: yes

    - name: Run docker-compose
      community.docker.docker_compose:
        project_src: "{{ repo_dest }}"
      register: output

    - ansible.builtin.debug:
        var: output

    - name: Create a domain
      community.digitalocean.digital_ocean_domain:
        oauth_token: "{{ oauth_token }}"
        state: present
        name: "{{ item }}"
        ip: "{{ droplet_id }}"
      with_items:
        - "www.{{ domain }}"
        - "{{ domain }}"

    - name: Create default A record for example.com
      community.digitalocean.digital_ocean_domain_record:
        oauth_token: "{{ oauth_token }}"
        state: present
        domain: "{{ item }}"
        type: A
        name: "@"
        data: "{{ droplet_id }}"
      with_items:
        - "www.{{ domain }}"
        - "{{ domain }}"

# add domains to digital ocean
# add domain rate limiting config to nginx configuration
# restart nginx?